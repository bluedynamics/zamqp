AMQP Convenience
================

    >>> from zamqp import AMQPProps
    >>> props = AMQPProps('my_queue_name',
    ...                   host='localhost',
    ...                   user='guest',
    ...                   password='guest',
    ...                   ssl=False)
    >>> props
    <zamqp._api.AMQPProps object at ...>
    
    >>> from zamqp import AMQPConnection
    >>> #connection = AMQPConnection('r', props)
    >>> #connection
    <zamqp._api.AMQPConnection object at ...>
    
    >>> #connection.channel
    <amqplib.client_0_8.channel.Channel object at ...>
    
    >>> #connection.close()
    >>> #connection.channel
    
    >>> class Callback(object):
    ... 
    ...     def __init__(self, messages):
    ...         self.messages = messages
    ... 
    ...     def __call__(self, message):
    ...         print message
    ...         self.messages.append(message)
    
    >>> messages = list()
    >>> callback = Callback(messages)
    
    >>> from zamqp import AMQPConsumer
    >>> from zamqp import AMQPThread
    >>> #comsumer = AMQPConsumer(props, callback)
    >>> #amqpthread = AMQPThread()
    >>> #amqpthread.consumer = comsumer
    >>> #amqpthread.start()
    
    >>> from zamqp import AMQPProducer
    >>> producer = AMQPProducer(props)
    >>> producer('1')
    >>> producer('2')
    >>> producer('3')
    
    >>> #amqpthread.close()
    
    >>> #messages
    []